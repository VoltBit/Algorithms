Problema 1 - K-Colorare

Pentru rezolvarea problemei am incercat mai multe tehnici - greedy si backtracking. In starea finala algoritmul foloseste doar un backtracking optimizat, acesta incearca toate combinatiile de culori care indeplinesc coditia de a nu exista doua culori asemenea pe noduri adiacente. In plus, pentru eficientizare nu se merge mai departe cu colorarea grafului daca culorile deja folosite duc la un cost mai mare decat cel mai bun gasit.

Solutia initiala pe care am folosit-o aplica un algoritm greedy care gasea o solutie, apoi backtracking-ul o folosea drept plafon - nu colora graful daca nodurile deja colorate duceau la un cost mai mare decat acel plafon. Acest algoritm era liniar pe testele unde exista grafuri bipartite, dar pe un test cu multe muchii era mai incet cu 20%. Algoritmul poate fi accelerat daca in loc sa incerc construirea unei solutii folosind ordinea predefinita a nodurilor le-as ordona folosind o cautare. De asemenea cum majortatea testelor contin grafuri bipartite un test pe graf impreuna cu obtinerea celei mai bune combinatii de culori ar rezolva testele respective in timp liniar.

Codul este comentat succint, cu exceptia fisierelor graph.cpp si graph.h care nu reprezinta decat un schelet facut pentru a facilita lucrul cu grafuri si contine metode clasice precum creearea de matrice de noduri si lista de adiacenta, parcurgeri etc.

Problema 2 - Expozitie

Ideea de rezolvare este urmatoarea: parcurg intreg graful folosind un bfs si modific muchiile dupa urmatoarea logica: daca un nod are grad par toate muchiile devin externe, altfel, daca este impar, rezolv toti vecinii care au grad 1 apoi transform un numar par de muchii in muchii externe. La sfarsitul acestui BFS toate muchiile sunt orientate, dar exista si erori - noduri cu grad impar. Daca numarul nodurilor cu grad impar este impar atunci nu exista o orientare posibila. Daca numarul lor este par atunci le pot transforma gradul din impar in par lundu-le cate doua, gasind o cale de la una catre cealalta si orientand in sens invers toate muchiile de pe calea respectiva. Algoritmul insa nu intra in timp si in forma curenta are bug-uri care duc la imposibilitatea rezolvarii erorilor.

Nu mi-am dat seama de ce, dar pe vmchecker nu imi ruleaza prima problema daca este si a doua problema in aceeasi arhiva, am lasat makefile-ul doar cu regula pentru problema 1. In arhiva se afla un folder cu rezolvarea problemei 2.
